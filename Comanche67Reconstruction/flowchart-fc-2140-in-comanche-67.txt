Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4

====== Flowchart FC-2140 Incorporation in Comanche 67 ======

([[comanche-67-reconstruction|Return to main Comanche 67 reconstruction page.]])

Unfortunately, we have only the Colossus 2D (and 2A) revision(s) of the flowchart, so if discrepancies between the flowchart and code are discovered, they'll have to be taken with a grain of salt.

Unfortunately also, we don't know //a priori// which sheets of the flowchart changed from Colossus 2A to 2C or 2D. Because I think it will be easier to compare flowchart vs flowchart than flowchart vs code, however, I'll begin with a detailed comparison of the 2A vs 2D flowcharts, and only then compare to code when discrepancies between the flowcharts are found.

PRIOLARM: 2D/3 vs 2A/3. Looks good.

VARALARM: 2D/3 vs 2A/3. Looks good.

CURTAINS: 2D/4 vs 2A/3. Looks good.

ALARM: 2D/4 vs 2A/3. Looks good.

ALARM2: 2D/4 vs 2A/3. Looks good.

BORTENT: 2D/4 vs 2A/3. Looks good.

BAILOUT: 2D/5 vs 2A/3. Looks good.

POODOO: 2D/5 vs 2A/3. Looks good.

CCSHOLE: 2D/5 vs 2A/3. The alarm code differs. This is due to PCR-801.1, and the source code agrees with the flowchart.

ABORT2: 2D/5 vs 2A/3. Looks good.

PRIOENT: 2D/6 vs 2A/3. Looks good.

LARMENT: 2D/7 vs 2A/4. Looks good.

CHKFAIL1: 2D/8 vs 2A/4. Looks good.

CHKFAIL2: 2D/8 vs 2A/4. No, the two flowcharts are dramatically different. However, the 2D flowchart agrees with the reconstructed code, which was already changed from the Comanche 55 baseline due to PCR-802.1.

PROGLARM: 2D/9 vs 2A/4. No, the two flowcharts disagree. But the 2D flowchart agrees with the reconstructed code, //some// of which was already changed due to PCR-802.1.

MULTEXIT: 2D/9 vs 2A/5. The 2D flowchart says BAILOUT +9 in the comments for the RETURN VIA block, whereas the 2A flowchart says BAILOUT +7. For MULTEXIT, it just takes the address stored in the input-variable ITEMP1 and adds 1 to it. Thus MULTEXIT has no direct knowledge of what's the address is. But if we check the code from which MULTEXIT is reached, we should be able to find the table and what addresses it holds. In point of fact, we find that MULTEXIT is only reached in two ways: by flowing through from PROGLARM, or via TCF. However, TCF PROGLARM only appears in Comanche 55 baseline code, and has been removed from Comanche 67 due to PCR-802.1. PROGLARM, in turn, is reached in reconstructed code only by calls to CHKFAIL1, CHKFAIL2, or flow-through from LARMENT. Calls to CHKFAIL2 occur only in CHKFAIL1, and there are no calls to CHKFAIL1. Hence in the reconstructed code, the only way to reach MULTEXIT is by a call to LARMENT. LARMENT does set ITEMP1, as its own return address. Thus the RETURN VIA A in MULTEXIT is to the address after whatever is in the Q register at the beginning of LARMENT. I phrase it that way, because there are no calls to LARMENT, which can only be reached by flow-through, including indirectly through calls to PRIOENT, PRIOENT +1, BORTENT, ALARM2, and ALARM. But I guess where we should really be looking if the 2D flowchart is correct for at TC at BAILOUT +7 in 2D and BAILOUT +5 in 2A. Indeed, in the reconstructed code there is a TC BORTENT at BAILOUT +7. In Comanche 55 there is also a TC BORTENT at BAILOUT +7, and no TC at all at BAILOUT +5, so I can only assume this was an error in the 2D flowchart. As a double-check, in both 2A and 2D code, in a similar way, we should find relevant TC's at:

* PRIOLARM +5: yes, TC PRIOENT +1
* VARALARM +4: yes, TC PRIOENT
* CURTAINS +2: yes, TC ALARM2
* ABORT2: yes, TC ABORT2

PRIOLARM +7: 2D/10 vs 2A/5. Looks good.

VARALARM +6: 2D/10 vs 2A/5. Looks good.

CURTAINS +4: 2D/10 vs 2A/5. Looks good.

BAILOUT +9: 2D/11 vs 2A/5. The 2D flowchart says BAILOUT +9 here, whereas the 2A flowchart says BAILOUT +7, both referring to the RETURN VIA A block in MULTEXIT. This is what should be found (see the comment for MULTEXIT), although I think it's an error in the 2A flowchart. But looks good.

ABORT2 +2: 2D/11 vs 2A/5. Looks good.

WHIMPER -1: 2D/11 vs 2A/5. Looks good.

Continuation of ABORT2 +2: 2D/12 vs 2A/6. Looks good.

MR.KLEAN: 2D/13 vs 2A/6. Looks good.

WHIMPER: 2D/13 vs 2A/6. Looks good.

The remainder of the sheets are tables rather than flowcharts.

In summary, looks good! No additional changes to Comanche 67 needed.

