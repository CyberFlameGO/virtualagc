( [Return to main Comanche 67 reconstruction page.](comanche-67-reconstruction))

We do not have a copy of PCR-785, "Reverse V50N18 logic in P20".&nbsp;

My first thought is to examine the software flowcharts to see if they can shed any light on what this means.&nbsp; The P20 flowchart is FC-2550.&nbsp; Fortunately, the Colossus 2D flowchart document contains [revision "COLOSSUS IIC" of FC-2550](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=712), so it can be compared to baseline Comanche 55 code.&nbsp; The process is facilitated by the fact that the first sheet of the flowchart notes that only sheets 3, 10, 16, 41, and 45 have changed relative to revision "COLOSSUS IIA".&nbsp; (Of course, sheet 1 has also changed, or else we wouldn't have the list of changed sheets I just mentioned.&nbsp; But sheet 1 has no flowcharting on it.)

- [Sheet 3](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=714):&nbsp; According to the flowchart, flag V50N18FL is set ("ENABLE R60 ATTITUDE MANEUVER") soon after the start of PROG20, probably immediately after RNDVZFLG is set.&nbsp; In the Comanche 55 baseline code, log section P20-P25, we find no such action.
- [Sheet 10](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=721):&nbsp; In the flowchart, in the routine R61CSM, immediately upon return from CRS61.1, V50N18FL is cleared to "INHIBIT FURTHER R60 ATTITUDE MANEUVERS".&nbsp; In the Comanche 55 code there is no such action.&nbsp; (In Artemis, by the way, this is given the symbolic label R61DMPTG which isn't referenced anywhere in the code, but seems to be present for the purpose of digital simulation.)
- [Sheet 16](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=727):&nbsp; In the flowchart, immediately after entry into STKTEST, a test of V50N18FL ("IS R60 ATTITUDE MANEUVER ALLOWED?") is performed.&nbsp; The Comanche 55 code performs no such test.&nbsp; Actually, it's more complex than that, because it's not merely that Comanche 55 has no test of V50N18FL here ... in fact, it has a different test, of STIKFLAG (although it does so by masking STIKBIT with FLAGWRD1, rather than by name).
- [Sheet 41](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=752):&nbsp; In the flowchart, sheet 41 is simply a list of all flagwords used, including V50N18FL, so the sheet isn't comparable to the code.
- [Sheet 45](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=756):&nbsp; In the flowchart, sheet 45 is the (continuation of a) list of erasable locations used and a list of program constants, so the sheet isn't comparable to code.&nbsp; However, all of the other changed sheets have turned out to be related to V50N18FL, leading us to assume (perhaps incorrectly) that the entire change in P20 between the Colossus 2A and Colossus 2C revisions of the flowchart should be based on PCR-785.&nbsp; So it behooves us to ask how the material on sheet 45 relates to PCR-785?&nbsp; Or how they relate to the changes on sheets 3, 10, 16?&nbsp; I'm forced to admit that I can't see it.

Of course, V50N18FL itself must also be defined, as bit 15 of FLAGWRD3 in ERASABLE ASSIGNMENTS, if Artemis is any guide.&nbsp; Artemis also has a couple of other manipulations of V50N18FL, in ENATMA (V58) of EXTENDED VERBS and in CHECKTAB (in V37) of FRESH START AND RESTART.

Having found all of this stuff, let's consider again the title of the PCR, "Reverse V50N18 logic in P20", and ask a couple of questions:

1. Comanche 2A (and earlier versions of Colossus) don't even have flag V50N18FL.&nbsp; So how can we "reverse" the logic of a flag that doesn't even exist?&nbsp; Is it possible that STIKFLAG served the same purpose, and that the logic of V50N18FL is supposed to be reversed from the logic of STIKFLAG?&nbsp; Well, as to that, I'd point out that STIKFLAG continues to be used in Artemis, and hasn't been obsoleted by the introduction of V50N18FL, so no general change in the usage of STIKFLAG is called for.&nbsp; It is set when the astronaut has control of the rotational hand controller (RHC), so whatever purpose it may have served vis-a-vis V50N18FL was secondary.&nbsp; Nevertheless, it is true that for the test at the beginning of STKTEST, Comanche 55 branches when STIKFLAG is cleared whereas Comanche 67 branches when V50N18FL is set.&nbsp; So perhaps that really is the basis of the "reversal" of logic.
2. And what about the other manipulations of V50N18FL in Artemis which are outside the immediate context of P20?
  1. Unfortunately the FRESH START AND RESTART flowchart is missing from our Colossus 2C flowchart document, but we do have the ["COLOSSUS II-D" revision of FC-2020](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=9).&nbsp; And in an unusually helpful mood, sheet 1 lists the sheets changed at each revision, so we can actually determine which sheets correspond to Colossus 2C changes.&nbsp; It tells us that for Colossus 2C, sheets 5, 7, and 25 were revised ... and then renumbered to 6, 8, and 26.&nbsp; Sheet 26 was revised again for Colossus 2D, so it won't be precisely what it was for Colossus 2C.&nbsp; On those individual sheets we find:
    1. [Sheet 6](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=14):&nbsp; In DOFSTART, Bits 15, 14, and 12-1 of FLAGWRD3 (V50N18FL) are cleared.&nbsp; &nbsp;Bit 15 is V50N18FL.&nbsp; However, it appears more that this code is trying to preserve only bit 13 than it is trying to clear bit 15 specifically, and the same mechanism seems to be used in all revisions of Colossus anyway.&nbsp; But this is a direct manipulation of FLAGWRD3 rather than the explicit use of V50N18FL I mentioned above.&nbsp;
    2. [Sheet 8](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=16):&nbsp; I see nothing that appears relevant.
    3. [Sheet 26](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=34):&nbsp; &nbsp;In RAKE of INITSUB, I see that bits 14 and 9 of FLAGWRD3 are cleared, but I see no access of bit 15 (V50N18FL).&nbsp; This does not seem to be at the same location as the reference in Artemis to V50N18FL anyway.&nbsp;
    4. The Artemis reference to V50N18FL occurs in CHECKMOD just prior to ISSERVON, which corresponds to the very bottom of [sheet 33 in FC-2020](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=41) and the top of sheet 34.&nbsp; These are not sheets changed in Colossus 2C, nor does any reference to V50N18FL show up in the flowchart there.
  2. Regarding EXTENDED VERBS, flowchart FC-2190 is missing from both our Colossus 2C and 2D flowchart documents.&nbsp; (In the 2D document, it is listed both as being up-to-date and included, and as having "no pages".&nbsp; Oh joy!)&nbsp; Thus we are left to guess.&nbsp; In Artemis, the V50N18FL reference is in ENATMA, which does nothing other than to set V50N18FL and clears STIKFLAG.&nbsp; Whereas in Comanche 55, ENATMA merely clears STIKFLAG.&nbsp; Given that we tentatively concluded above that this PCR is splitting the secondary function of enabling R60 maneuvers from STIKFLAG, leaving STIKFLAG with just its primary purpose of indicating that the RHC is in use, it makes sense that ENATMA would have to deal with both flags.&nbsp; However, the Artemis code is not directly suitable as-is, because to clear STIKFLAG it uses a routine (DOWNX) which does not exist in Comanche.&nbsp;&nbsp;

So ... that's a lot of words in the analysis.&nbsp; My summary of all that is that a proprocessor label "Reconstruction785" should be added to conditionally assemble the following changes:

- In P20-P25.gpp:
  - Immediately after RNDVZFLG is set in PROG20, set V50N18FL.
  - Immediately after return from CRS61.1 in R61CSM, clear V50N18FL.&nbsp; In implementing this, I find that the change is already in place and that the comments point out that there are actually two reasonably-logical ways of implementing it.
  - Immediately after entry into STKTEST, replace the existing test of STIKFLAG by a test (with the opposite logic) of V50N18FL.&nbsp; In implementing this, I find that the change is already in place and that the comments point out three competing methods for implementing it.&nbsp; I did, however, find a bug in the existing fix at that point (namely, usage of V50N18FL when only V50N18BT gives the correct result).&nbsp; This substantially reduces the banksum (bank 34), but only from ~5000 to ~100, and it's always possible that that's just a meaningless coincidence.
- In FRESH\_START\_AND\_RESTART.gpp:&nbsp; Do _not_ make any change, even though Artemis references both V50N18FL and bit 15 of FLAGWORD3.
- In EXTENDED\_VERBS.gpp:&nbsp; In ENATMA, after the existing instructions to clear STIKFLAG, set V50N18FL.&nbsp; (The analysis above would imply instead that ENATMA should _first_ set V50N18FL and _then_ clear STIKFLAG.&nbsp; But in implementing the code, I found that the change had already been made — in the opposite order — with comments referring to the ["COLOSSUS 2D" revision of flowchart FC-2370](https://www.ibiblio.org/apollo/Documents/E-2456-2D.pdf#page=500), which it turns out, covers ENATMA.&nbsp; Of course, functionally it makes no difference what order they occur in, and it would not affect the banksum, but it's better to follow the flowchart.)
- In ERASABLE\_ASSIGNMENTS, add a comment about V50N18FL similar to Artemis, and added V50N18FL = 045D.&nbsp; Artemis also adds V50N18BT = BIT15, even though it doesn't reference it anywhere, and I think it should indeed be added.

⚠ In summary, the fix is implemented.&nbsp; But there are competing methods of doing the implementation at several different points, all of them equally logical, and it may be necessary to revisit them to determine which is really the correct way.

