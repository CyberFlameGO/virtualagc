Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4

====== Flowchart FC-2440 Incorporation in Comanche 67 ======

([[comanche-67-reconstruction|Return to the main Comanche 67 reconstruction page.]])

We have the Colossus 2 and 2D revisions of flowchart FC-2440, with no indication of which sheets have changed, so the strategy is to compare the flowcharts side-by-side and only compare vs reconstructed code if differences between the flowcharts are detected.

PITCHDAP, PSTROKER, PCDUDOTS: 2/1 vs 2D/2,3: Matched

PINTEGRL: 2/2 vs 2D/3: Well, in the gloss for the Colossus 2 2 flowchart, it purports to compute ωsub y, whereas 2D purports to compute (ωsub y) dot. However, the two flowcharts use the same actual operations for the computation, so I suppose I can say that they match.

PERORLIM, PFORWARD, FWFLTR, 1DAPCAS: 2/2 vs 2D/4: Match.

2DAPCAS, 3DAPCAS, OPTVARK: 2/2,3 vs 2D/5: In 2DAPCAS, the Colossus 2 flowchart has DAP3←DAP2 where the 2D flowchart has DAP3←4 \* DAP2. The reconstructed code already has this modification, due to PCR-811. Similarly in OPTVARK, there's a scaling difference in computing CMDTMP, and the reconstructed code already uses the 2D scaling, due to incorporation of PCR-811. But it's odd, though, because the scaling shown in the Colossus 2 flowchart doesn't match the Colossus 2 (or 2A) code. So apparently, the Colossus 2 flowchart is in //error// about the scaling, in //addition// to the actual change in scaling from Colossus 2 to Colossus 2D.

POFFSET, PACLIM, POUT: 2/3 vs 2D/6: Matches.

PPRECOMP: 2/4 vs 2D/6: Matches

PRECOMP, 2CASFLTR: 2/4 vs 2D/7: Matches, except that in the 2D revision of the flowchart, 2CASFLTR has an entry point 3CASFLTR that's missing from the Colossus 2 revision. The program label 3CASFLTR is already present in all revisions of Colossus 2X, though never referenced. I guess this is just an editorial correction.

DELBARP, PCOPYCYC, PCOPY, PMISC, PDAPEND: 2/5 vs 2D/8,9: Matches

YAWDAP: 2/6 vs 2D/9: Matches.

YSTROKER: 2/6 vs 2D/10: Matches.

YCDUDOTS: 2/(missing) vs 2D/10: In the Colossus 2 flowchart, YSTROKER is followed immediately by YINTEGRL, whereas in the 2D flowchart YCDUDOTS intervenes between YSTROKER and YINTEGRL. YCDUDOTS's reconstructed code seems to match the 2D flowchart for it, although it would be nice if the 2D flowchart mentioned modular subtractions rather than just subtractions.

YINTEGRL: 2/6 vs 2D/11: Matches

YERORLIM, YFORWARD: 2/7 vs 2D/11: Matches

YOFFSET, YACLIM, YOUT: 2/8 vs 2D/12: Matches

YPRECOMP, YCOPYCYC, YDAPEND: 2/9,10 vs 2D/13: Matches.

ERRORLIM, RLIMTEST: 2/10 vs 2D/14: Matches

ACTLIM: 2/10 vs 2D/15: Both the Colossus 2 and 2D flowcharts express their CMDTMP computation peculiarly (and a little differently from each other), but if I understand properly what they're getting at, they seem to be saying the same thing. So I'd say the two match.

In summary, it seems to me there's a match, other than already-known differences due to PCR-811.

